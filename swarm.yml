version: "3.1"

services:
    wordpress:
        image: wordpress:php8.1-fpm
        ports:
            - "9000:9000"
        environment:
            WORDPRESS_DB_HOST: db
            WORDPRESS_DB_USER: exampleuser
            WORDPRESS_DB_PASSWORD: examplepass
            WORDPRESS_DB_NAME: exampledb
            WORDPRESS_CONFIG_EXTRA: |
                define('WP_HOME', 'http://wp.kam-life-pro.ru/');
                define('WP_SITEURL', 'http://wp.kam-life-pro.ru/');
                define('WP_DEBUG_LOG', true );
                define('WP_ALLOW_MULTISITE', true);

            # define( 'MULTISITE', true );
            # define( 'SUBDOMAIN_INSTALL', true );
            # define( 'DOMAIN_CURRENT_SITE', 'wp.localhost' );
            # define( 'PATH_CURRENT_SITE', '/' );
            # define( 'SITE_ID_CURRENT_SITE', 1 );
            # define( 'BLOG_ID_CURRENT_SITE', 1 );

        volumes:
            - wordpress:/var/www/html
            - ./wordpress/plugins:/var/www/html/wp-content/plugins
        networks:
            - intranet
        deploy:
            replicas: 1

    db:
        image: mysql:8.0
        environment:
            MYSQL_DATABASE: exampledb
            MYSQL_USER: exampleuser
            MYSQL_PASSWORD: examplepass
            MYSQL_RANDOM_ROOT_PASSWORD: "1"
        volumes:
            - db:/var/lib/mysql
        networks:
            - intranet

    frontend:
        image: trajectory-frontend
        ports:
            - 3000:3000
        networks:
            - intranet

    nginx:
        image: nginx:latest
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - wordpress:/var/www/html
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            # - /etc/letsencrypt/live/<domain>/fullchain.pem:/etc/nginx/ssl/fullchain.pem:ro
            # - /etc/letsencrypt/live/<domain>/privkey.pem:/etc/nginx/ssl/privkey.pem:ro
        networks:
            - intranet
        deploy:
            replicas: 1
            placement:
                constraints: [node.role == manager]
            restart_policy:
                condition: on-failure

networks:
    intranet:
        external: true

volumes:
    wordpress:
    db:

# docker swarm init --advertise-addr
# docker network create --driver overlay --scope swarm intranet

# docker stack deploy -c swarm.yml trajectory
# docker stack rm trajectory
# docker stack ls
# docker stack services trajectory
# docker stack ps trajectory
