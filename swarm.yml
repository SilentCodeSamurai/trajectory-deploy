services:
    nginx:
        image: nginx:latest
        environment:
            - BACKEND_SERVER_NAME=${BACKEND_SERVER_NAME}
            - FRONTEND_SERVER_NAME=${FRONTEND_SERVER_NAME}
        ports:
            - "80:80"
            - "443:443"
            - "8080:8080"
        volumes:
            - wordpress:/var/www/html
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./nginx:/etc/nginx/templates
            # - /etc/letsencrypt/live/<domain>/fullchain.pem:/etc/nginx/ssl/fullchain.pem:ro
            # - /etc/letsencrypt/live/<domain>/privkey.pem:/etc/nginx/ssl/privkey.pem:ro
        networks:
            - intranet
        deploy:
            replicas: 1
            placement:
                constraints: [node.role == manager]
            restart_policy:
                condition: on-failure

    db:
        image: mysql:8.0
        environment:
            MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
            MYSQL_DATABASE: ${MYSQL_DATABASE}
            MYSQL_USER: ${MYSQL_USER}
            MYSQL_PASSWORD: ${MYSQL_PASSWORD}
        ports:
            - "3306:3306"
        volumes:
            - db:/var/lib/mysql
            - ./mysql/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
        networks:
            - intranet

    wordpress:
        image: wordpress:php8.1-fpm
        ports:
            - "9000:9000"
        environment:
            WORDPRESS_DB_HOST: db
            WORDPRESS_DB_USER: ${MYSQL_USER}
            WORDPRESS_DB_PASSWORD: ${MYSQL_PASSWORD}
            WORDPRESS_DB_NAME: ${MYSQL_DATABASE}
            WORDPRESS_CONFIG_EXTRA: |
                define('WP_HOME', 'http://${BACKEND_SERVER_NAME}');
                define('WP_SITEURL', 'http://${BACKEND_SERVER_NAME}');
                define('WP_DEBUG_LOG', true );
                define('WP_ALLOW_MULTISITE', true);

            # define( 'MULTISITE', true );
            # define( 'SUBDOMAIN_INSTALL', true );
            # define( 'DOMAIN_CURRENT_SITE', 'wp.localhost' );
            # define( 'PATH_CURRENT_SITE', '/' );
            # define( 'SITE_ID_CURRENT_SITE', 1 );
            # define( 'BLOG_ID_CURRENT_SITE', 1 );

        volumes:
            - wordpress:/var/www/html
            - ./wordpress/plugins:/var/www/html/wp-content/plugins
            - ./wordpress/php-fpm/www.conf:/usr/local/etc/php-fpm.d/www.conf
        networks:
            - intranet
        deploy:
            replicas: 3
        hostname: "wordpress-{{.Task.Slot}}"

    frontend:
        image: trajectory-frontend
        ports:
            - 3000:3000
        networks:
            - intranet

    nginx-exporter:
        image: nginx/nginx-prometheus-exporter:latest
        command:
            - -nginx.scrape-uri=http://nginx:8080/stub_status
        networks:
            - intranet
        deploy:
            replicas: 1

    mysql-exporter:
        image: prom/mysqld-exporter
        networks:
            - intranet
        ports:
            - "9104:9104"
        environment:
            MYSQLD_EXPORTER_PASSWORD: ${MYSQL_EXPORTER_PASSWORD}
        volumes:
            - ./mysql/mysqld_exporter.cnf:/etc/mysqld_exporter.cnf
        command:
            - --config.my-cnf=/etc/mysqld_exporter.cnf
            - --mysqld.address=db:3306
        deploy:
            replicas: 1
            resources:
                limits:
                    cpus: "0.50"
                    memory: 512M

    wordpress-exporter:
        image: hipages/php-fpm_exporter:latest
        environment:
            - PHP_FPM_SCRAPE_URI=tcp://wordpress-{{.Task.Slot}}:9000/status
        networks:
            - intranet
        deploy:
            replicas: 3
            restart_policy:
                condition: on-failure

    prometheus:
        image: prom/prometheus:latest
        volumes:
            - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
            - prometheus-data:/prometheus
        ports:
            - "9090:9090" # Expose Prometheus UI
        networks:
            - intranet
        deploy:
            replicas: 1

    grafana:
        image: grafana/grafana:latest
        ports:
            - "3001:3000"
        volumes:
            - grafana_data:/var/lib/grafana
        environment:
            - GF_SECURITY_ADMIN_PASSWORD=admin
        networks:
            - intranet
        deploy:
            replicas: 1

networks:
    intranet:
        external: true

volumes:
    db:
    wordpress:
    prometheus-data:
    grafana_data:
# docker swarm init --advertise-addr
# docker network create --driver overlay --scope swarm intranet

# docker stack ls

# docker compose config >swarm.yml
# docker stack deploy -c swarm.yml trajectory
# docker stack services trajectory
# docker stack ps trajectory

# docker stack rm trajectory

